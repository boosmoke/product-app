{"version":3,"sources":["reducers/storeReducer.js","reducers/index.js","constants/types.js","components/Products/index.js","components/Product/index.js","components/ProductFilter/index.js","components/CartItem/index.js","actions/storeActions.js","containers/Modal/index.js","containers/Home/index.js","containers/App/index.js","index.js"],"names":["INITIAL_STATE","products","cart","productApp","combineReducers","storeReducer","state","action","type","payload","sort","a","b","localeCompare","split","filter","item","prodId","Products","addToCart","className","map","product","index","key","Product","id","src","imageURL","alt","caption","price","onClick","filterProducts","this","props","Component","CartItem","removeFromCart","getProducts","dispatch","fetch","then","response","json","List","closeCart","length","Home","inlineCart","actions","setState","document","querySelector","style","setTimeout","connect","bindActionCreators","storeActions","App","store","createStore","reducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b80d6fe2.chunk.js","sourcesContent":["import * as types from '../constants/types'\r\n\r\nconst INITIAL_STATE = {\r\n  products: [],\r\n  cart: []\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case types.GET_PRODUCTS:\r\n      return {\r\n        ...state, products: action.payload\r\n      };\r\n\r\n    case types.FILTER_PRODUCTS:\r\n      return {\r\n        ...state, products: [...state.products.sort((a, b) => action.payload === 'isAvailable' ? ((a[action.payload] === b[action.payload])? 0 : a[action.payload]? -1 : 1) : action.payload !== 'price' ? a[action.payload].localeCompare(b[action.payload].split(' ')[0]) : a[action.payload] - b[action.payload])]\r\n      };\r\n    case types.ADD_TO_CART:\r\n    return {\r\n      ...state, cart: [action.payload, ...state.cart]\r\n    };\r\n    case types.REMOVE_FROM_CART:\r\n    return {\r\n      ...state, cart: [...state.cart.filter((item) => item.prodId !== action.payload)]\r\n    };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport storeReducer from './storeReducer'\r\n\r\nconst productApp = combineReducers({\r\n  storeReducer\r\n});\r\n\r\nexport default productApp","export const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const FILTER_PRODUCTS = 'FILTER_PRODUCTS';","import React from 'react'\r\nimport {Product} from '../'\r\nimport './styles.css'\r\n\r\nconst Products = ({products, addToCart}) =>\r\n  <div className=\"row products__container\">\r\n  {products.map((product, index) =>\r\n    <Product key={index} addToCart={addToCart} product={product} />\r\n  )}\r\n  </div>;\r\n\r\nexport default Products\r\n\r\n\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nconst Product = ({product, addToCart}) =>\r\n  <div key={product.id} className=\"product__container\">\r\n    <div className=\"product\">\r\n      <img src={product.imageURL} alt={product.caption} />\r\n      <div className=\"stats\">\r\n          <div className=\"stats-container\">\r\n          <span className=\"product_name\">{product.caption}</span>\r\n          <span className=\"product_price\">${product.price}</span>\r\n          </div>\r\n          <button onClick={()=> {addToCart(product)}}className=\"atc-btn\">\r\n            Add To Cart\r\n          </button>\r\n      </div>\r\n    </div>\r\n  </div>;\r\n\r\nexport default Product\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nexport default class index extends Component {\r\n  render() {\r\n    const { filterProducts } = this.props;\r\n    return (\r\n      <div className=\"filters__bar\">\r\n        <h3>Filters</h3>\r\n        <button className=\"filter-btn\" onClick={()=> {filterProducts('price')}}>\r\n          Price\r\n        </button>\r\n        <button className=\"filter-btn\" onClick={()=> {filterProducts('caption')}}>\r\n          Title\r\n        </button>\r\n        <button className=\"filter-btn\" onClick={()=> {filterProducts('brand')}}>\r\n          Brand\r\n        </button>\r\n        <button className=\"filter-btn\" onClick={()=> {filterProducts('isAvailable')}}>\r\n          Availability\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nconst CartItem = ({product, removeFromCart}) =>\r\n  <div key={product.prodId} className=\"product__container\">\r\n    <div className=\"product\">\r\n      <img src={product.imageURL} alt={product.caption} />\r\n      <div className=\"stats\">\r\n          <div className=\"stats-container\">\r\n            <span className=\"product_price\">${product.price}</span>\r\n            <span className=\"product_name\">{product.caption}</span>\r\n          </div>\r\n          <button onClick={()=>{removeFromCart(product.prodId)}} className=\"remove-btn\">\r\n            Remove\r\n          </button>\r\n      </div>\r\n    </div>\r\n  </div>;\r\n\r\nexport default CartItem;\r\n","import * as types from '../constants/types'\r\n\r\nexport const getProducts = () =>\r\n  dispatch =>\r\n    fetch(`ListJSONTest.json`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        dispatch({\r\n          type: types.GET_PRODUCTS,\r\n          payload: response.List\r\n        })\r\n      })\r\n\r\nexport const filterProducts = filter => ({\r\n  type: types.FILTER_PRODUCTS,\r\n  payload: filter\r\n})\r\n\r\nexport const addToCart = product => ({\r\n  type: types.ADD_TO_CART,\r\n  payload: product\r\n})\r\n\r\nexport const removeFromCart = id => ({\r\n  type: types.REMOVE_FROM_CART,\r\n  payload: id\r\n})","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport {CartItem} from '../../components';\r\n\r\nexport default class index extends Component {\r\n  render() {\r\n    const {cart, closeCart, removeFromCart} = this.props;\r\n    return (\r\n      <div className=\"modal cart\">\r\n        <h1>Cart</h1>\r\n        <button className=\"close-cart-btn\" onClick={()=> {closeCart()}}>X</button>\r\n        <div className=\"cart__products\">\r\n          {cart.length > 0 && cart.map((product, index)=> <CartItem key={index} product={product} removeFromCart={removeFromCart}/>)}\r\n        </div>\r\n        <div className=\"checkout\">Checkout</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {Products, ProductFilters} from '../../components';\r\nimport * as storeActions from '../../actions/storeActions';\r\nimport Modal from '../Modal';\r\n\r\nimport './styles.css';\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    inlineCart: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getProducts();\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const {actions, products, cart} = this.props;\r\n\r\n    const closeCart = () => {\r\n      const cart = document.querySelector('.cart');\r\n      if(cart) {\r\n        cart.style = \"transform: translateX(375px)\";\r\n      }\r\n      setTimeout(() => {\r\n        this.setState({inlineCart : !this.state.inlineCart})\r\n      }, 500);\r\n    }\r\n\r\n    const toggleCart = () => {\r\n      this.setState({inlineCart : !this.state.inlineCart})\r\n    }\r\n    return (\r\n      <div className={\"home \" + (this.state.inlineCart ? 'hidden' : '')}>\r\n        <button onClick={()=>{toggleCart()}}className=\"cart-btn\">\r\n          <i className=\"fa fa-shopping-cart\"></i>\r\n          {cart.length}\r\n        </button>\r\n        {this.state.inlineCart && <Modal closeCart={closeCart} removeFromCart={actions.removeFromCart} cart={cart}/>}\r\n        <ProductFilters filterProducts={actions.filterProducts}/>\r\n        <Products addToCart={actions.addToCart} products={products}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    products: state.storeReducer.products,\r\n    cart: state.storeReducer.cart\r\n  }),\r\n  dispatch => ({\r\n    actions: bindActionCreators(storeActions, dispatch)\r\n  })\r\n)(Home)\r\n","import React, {Component} from 'react'\r\nimport Home from '../Home';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Home/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\nimport App from './containers/App';\n\nimport './styles.css';\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(\n    thunkMiddleware,\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}